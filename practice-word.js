// Generated by LiveScript 1.3.1
(function(){
  var synthesize_word;
  synthesize_word = function(word){
    var synth_lang, video_tag;
    synth_lang = 'en';
    video_tag = $('#synthesizeword');
    if (video_tag.length === 0) {
      video_tag = $('<video>').prop('id', 'synthesizeword').css({
        display: 'none'
      });
      $('body').append(video_tag);
    }
    video_tag.attr('src', 'http://speechsynth.herokuapp.com/speechsynth?' + $.param({
      lang: synth_lang,
      word: word
    }));
    video_tag[0].currentTime = 0;
    return video_tag[0].play();
  };
  Polymer({
    is: 'practice-word',
    properties: {
      word: {
        type: String,
        value: '',
        observer: 'wordChanged'
      },
      difficulty: {
        type: Number,
        value: 0,
        observer: 'shownKeysChanged'
      },
      partialword: {
        type: String,
        value: '',
        observer: 'partialwordChanged'
      }
    },
    playword: function(){
      return synthesize_word(this.word);
    },
    wordChanged: function(){
      this.playword();
      return this.shownKeysChanged();
    },
    partialwordChanged: function(){
      this.$$('#inputarea').innerText = this.partialword;
      return this.shownKeysChanged();
    },
    keyTyped: function(evt, key){
      var letter, next_letter, this$ = this;
      letter = key.keytext;
      next_letter = this.nextLetter();
      if (letter !== next_letter) {
        this.difficulty = 0;
        this.partialword = '';
      }
      if (letter === next_letter) {
        if (this.partialword + letter === this.word) {
          if (this.difficulty < 3) {
            this.difficulty += 1;
          } else {
            window.location = 'https://www.google.com/search?site=&tbm=isch&q=' + this.word;
          }
          this.partialword = '';
          return setTimeout(function(){
            return this$.playword();
          }, 500);
        } else {
          return this.partialword = this.partialword + letter;
        }
      }
    },
    nextLetter: function(){
      if (this.word === this.partialword || this.word == null || this.partialword == null) {
        return '';
      }
      return this.word[this.partialword.length];
    },
    shownKeysChanged: function(){
      var keyboard, next_letter;
      keyboard = this.$$('#keyboard');
      next_letter = this.nextLetter();
      console.log('next_letter is:' + next_letter);
      if (this.partialword != null) {
        console.log(this.partialword.length);
        this.$$('#wordspan').highlightidx = this.partialword.length;
      }
      if (this.difficulty === 0) {
        keyboard.shownkeys = next_letter;
      }
      if (this.difficulty === 1) {
        keyboard.shownkeys = this.word;
      }
      if (this.difficulty === 2) {
        keyboard.shownkeys = ["a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z"].join('');
      }
      if (this.difficulty === 3) {
        keyboard.shownkeys = ["a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z"].join('');
      }
      if (this.difficulty === 3) {
        return this.$$('#wordspan').style.visibility = 'hidden';
      } else {
        return this.$$('#wordspan').style.visibility = 'visible';
      }
    }
  });
}).call(this);
