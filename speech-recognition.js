// Generated by LiveScript 1.3.1
(function(){
  Polymer({
    is: 'speech-recognition',
    properties: {
      width: {
        type: String,
        value: 100,
        notify: true
      },
      height: {
        type: String,
        value: 100,
        notify: true
      },
      language: {
        type: String,
        value: 'en-US'
      },
      isrecording: {
        type: Boolean,
        value: false,
        observer: 'isrecordingChanged'
      }
    },
    buttonClicked: function(){
      var self, recognition;
      self = this;
      console.log(this.language);
      recognition = this.recognition = new webkitSpeechRecognition();
      recognition.lang = this.language;
      recognition.continuous = false;
      recognition.interimResults = false;
      recognition.maxAlternatives = 10;
      recognition.onstart = function(event){
        return self.isrecording = true;
      };
      recognition.onresult = function(event){
        var candidates, res$, i$, ref$, len$, x;
        if (true) {
          recognition.stop();
          res$ = [];
          for (i$ = 0, len$ = (ref$ = event.results[0]).length; i$ < len$; ++i$) {
            x = ref$[i$];
            res$.push(x.transcript);
          }
          candidates = res$;
          if (self.onresults != null) {
            self.onresults(candidates);
          }
          return self.isrecording = false;
        }
      };
      return recognition.start();
    },
    isrecordingChanged: function(newval, oldval){
      if (newval === oldval) {
        return;
      }
      if (newval) {
        return this.$$('img').src = 'speech-recognition-stop.webp';
      } else {
        return this.$$('img').src = 'speech-recognition.webp';
      }
    }
  });
}).call(this);
